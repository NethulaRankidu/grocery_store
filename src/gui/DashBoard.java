/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import backend.ComboItem;
import com.formdev.flatlaf.FlatDarkLaf;
import backend.ConnectionManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Nethula
 */
public class DashBoard extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public DashBoard() {
        initComponents();
        showSoldItemsCount("Today");
        durationCombo.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            String selected = (String) durationCombo.getSelectedItem();
            if (selected != null) {
                System.out.println("You selected: " + selected);
                showSoldItemsCount(selected);
            }
        }
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        salesPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        salesNum = new javax.swing.JLabel();
        salesPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        transactionNum = new javax.swing.JLabel();
        salesPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        profitNum = new javax.swing.JLabel();
        durationCombo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        Title.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Title.setText("Dashboard");

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Items Sold");

        salesNum.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        salesNum.setText("null");

        javax.swing.GroupLayout salesPanelLayout = new javax.swing.GroupLayout(salesPanel);
        salesPanel.setLayout(salesPanelLayout);
        salesPanelLayout.setHorizontalGroup(
            salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(salesNum))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        salesPanelLayout.setVerticalGroup(
            salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salesNum)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.add(salesPanel);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setText("Revenue (Rs.)");

        transactionNum.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        transactionNum.setText("null");

        javax.swing.GroupLayout salesPanel1Layout = new javax.swing.GroupLayout(salesPanel1);
        salesPanel1.setLayout(salesPanel1Layout);
        salesPanel1Layout.setHorizontalGroup(
            salesPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salesPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(transactionNum))
                .addContainerGap(147, Short.MAX_VALUE))
        );
        salesPanel1Layout.setVerticalGroup(
            salesPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transactionNum)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.add(salesPanel1);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setText("Profit (Rs.)");

        profitNum.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        profitNum.setText("null");

        javax.swing.GroupLayout salesPanel2Layout = new javax.swing.GroupLayout(salesPanel2);
        salesPanel2.setLayout(salesPanel2Layout);
        salesPanel2Layout.setHorizontalGroup(
            salesPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salesPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(profitNum))
                .addContainerGap(183, Short.MAX_VALUE))
        );
        salesPanel2Layout.setVerticalGroup(
            salesPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profitNum)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.add(salesPanel2);

        durationCombo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        durationCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Today", "This Week", "This Month", "This Year", "Lifetime" }));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("Actions");

        jPanel2.setLayout(new java.awt.GridLayout(1, 0, 5, 5));

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton1.setText("Billing");
        jButton1.setPreferredSize(new java.awt.Dimension(75, 30));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton2.setText("+ Add Products");
        jButton2.setActionCommand("");
        jButton2.setPreferredSize(new java.awt.Dimension(75, 30));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton3.setText("+ Add Category");
        jButton3.setPreferredSize(new java.awt.Dimension(75, 30));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton4.setText("+ Add Customer");
        jButton4.setPreferredSize(new java.awt.Dimension(75, 30));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);

        jButton6.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton6.setText("+ Add Stock");
        jButton6.setActionCommand("");
        jButton6.setPreferredSize(new java.awt.Dimension(75, 30));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6);

        jButton5.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        jButton5.setText("‚ùå Quit");
        jButton5.setActionCommand("");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 889, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(durationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Title)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(durationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(235, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        AddProduct product = new AddProduct();
        product.setVisible(true);

        // Close the current frame
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        BillingSystem billing = new BillingSystem();
        billing.setVisible(true);

        // Close the current frame
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        AddCategory category = new AddCategory();  // or any other JFrame
        category.setVisible(true);

        // Close the current frame
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        AddCustomer category = new AddCustomer();  // or any other JFrame
        category.setVisible(true);
        
        // Close the current frame
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        AddStock stock = new AddStock();  // or any other JFrame
        stock.setVisible(true);
        
        // Close the current frame
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_jButton6ActionPerformed
    
    public int getCountForPeriod(String sql) {
        try (Connection conn = ConnectionManager.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql);
             ResultSet rs = ps.executeQuery()) {

            if (rs.next()) {
                return rs.getInt("total");
                }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return 0;
    }
    
    public double getRevenue(String sql) {
        try (Connection conn = ConnectionManager.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql);
             ResultSet rs = ps.executeQuery()) {

            if (rs.next()) {
                return rs.getDouble("total_revenue");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return 0.0;
    }
    
    public double getProfit(String sql) {
        try (Connection conn = ConnectionManager.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql);
             ResultSet rs = ps.executeQuery()) {

            if (rs.next()) {
                return rs.getDouble("total_profit");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return 0.0;
    }
    
    public void showSoldItemsCount(String time) {
        if(time.equals("Today")){
            // Clearing items before editing
            salesNum.setText("");
            transactionNum.setText("");
            profitNum.setText("");
            
            // Sold Items
            int todaySalesCount = getCountForPeriod("SELECT COUNT(*) AS total FROM sold_items si JOIN bill b ON si.bill_id = b.bill_id WHERE DATE(b.datetime) = CURDATE()");
            salesNum.setText(todaySalesCount + "");
            System.out.println("Sales today: " + todaySalesCount);
            
            // Revenue
            double todayRevenue = getRevenue(
                "SELECT SUM(si.quantity * si.unit_price) AS total_revenue " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "WHERE DATE(b.datetime) = CURDATE()"
            );
            String formatted = String.format("Rs. %.2f", todayRevenue);
            transactionNum.setText(formatted);
            
            // Profit
            double todayProfit = getProfit(
                "SELECT SUM((si.unit_price - pb.product_cost) * si.quantity) AS total_profit " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "JOIN product_batches pb ON si.stock_id = pb.batch_id " +
                "WHERE DATE(b.datetime) = CURDATE();"
            );
            profitNum.setText(String.format("Rs. %.2f", todayProfit));
            
        }else if(time.equals("This Week")){
            // Clearing items before editing
            salesNum.setText("");
            transactionNum.setText("");
            profitNum.setText("");
            
            // Sold Items
            int weekSalesCount = getCountForPeriod("SELECT COUNT(*) AS total FROM sold_items si JOIN bill b ON si.bill_id = b.bill_id WHERE YEARWEEK(datetime, 1) = YEARWEEK(CURDATE(), 1)");
            salesNum.setText(weekSalesCount + "");
            System.out.println("Sales this week: " + weekSalesCount);
            
            // Revenue
            double weekRevenue = getRevenue(
                "SELECT SUM(si.quantity * si.unit_price) AS total_revenue " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "WHERE YEARWEEK(b.datetime, 1) = YEARWEEK(CURDATE(), 1);"
            );
            String formatted = String.format("Rs. %.2f", weekRevenue);
            transactionNum.setText(formatted);
            
            // Profit
            double weekProfit = getProfit(
                "SELECT SUM((si.unit_price - pb.product_cost) * si.quantity) AS total_profit " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "JOIN product_batches pb ON si.stock_id = pb.batch_id " +
                "WHERE YEARWEEK(b.datetime, 1) = YEARWEEK(CURDATE(), 1);"
            );
            profitNum.setText(String.format("Rs. %.2f", weekProfit));
            
        }else if(time.equals("This Month")){
            // Clearing items before editing
            salesNum.setText("");
            transactionNum.setText("");
            profitNum.setText("");
            
            // Sold Items
            int monthSalesCount = getCountForPeriod("SELECT COUNT(*) AS total FROM sold_items si JOIN bill b ON si.bill_id = b.bill_id WHERE YEAR(b.datetime) = YEAR(CURDATE()) AND MONTH(b.datetime) = MONTH(CURDATE());");
            salesNum.setText(monthSalesCount + "");
            System.out.println("Sales this month: " + monthSalesCount);
            
            // Revenue
            double monthRevenue = getRevenue(
                "SELECT SUM(si.quantity * si.unit_price) AS total_revenue " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "WHERE YEAR(b.datetime) = YEAR(CURDATE()) " +
                "AND MONTH(b.datetime) = MONTH(CURDATE());"
            );
            String formatted = String.format("Rs. %.2f", monthRevenue);
            transactionNum.setText(formatted);
            
            // Profit
            double monthProfit = getProfit(
                "SELECT SUM((si.unit_price - pb.product_cost) * si.quantity) AS total_profit " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "JOIN product_batches pb ON si.stock_id = pb.batch_id " +
                "WHERE YEAR(b.datetime) = YEAR(CURDATE()) " +
                "AND MONTH(b.datetime) = MONTH(CURDATE());"
            );
            profitNum.setText(String.format("Rs. %.2f", monthProfit));
            
        }else if(time.equals("This Year")){
            // Clearing items before editing
            salesNum.setText("");
            transactionNum.setText("");
            profitNum.setText("");
            
            // Sold Items
            int yearSalesCount = getCountForPeriod("SELECT COUNT(*) AS total FROM sold_items si JOIN bill b ON si.bill_id = b.bill_id WHERE YEAR(b.datetime) = YEAR(CURDATE())");
            salesNum.setText(yearSalesCount + "");
            System.out.println("Sales this year: " + yearSalesCount);
            
            // Revenue
            double yearRevenue = getRevenue(
                "SELECT SUM(si.quantity * si.unit_price) AS total_revenue " +
                "FROM sold_items " +
                "si JOIN bill b ON si.bill_id = b.bill_id " +
                "WHERE YEAR(b.datetime) = YEAR(CURDATE());"
            );
            String formatted = String.format("Rs. %.2f", yearRevenue);
            transactionNum.setText(formatted);
            
            // Profit
            double yearProfit = getProfit(
                "SELECT SUM((si.unit_price - pb.product_cost) * si.quantity) AS total_profit " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "JOIN product_batches pb ON si.stock_id = pb.batch_id " +
                "WHERE YEAR(b.datetime) = YEAR(CURDATE());"
            );

            profitNum.setText(String.format("Rs. %.2f", yearProfit));
            
        }else if(time.equals("Lifetime")){
            // Clearing items before editing
            salesNum.setText("");
            transactionNum.setText("");
            profitNum.setText("");
            
            // Sold Items
            int lifetimeSalesCount = getCountForPeriod("SELECT COUNT(*) AS total FROM sold_items si JOIN bill b ON si.bill_id = b.bill_id");
            salesNum.setText(lifetimeSalesCount + "");
            System.out.println("Sales lifetime: " + lifetimeSalesCount);
            
            // Revenue
            double lifetimeRevenue = getRevenue(
                "SELECT SUM(si.quantity * si.unit_price) AS total_revenue " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id "
            );
            String formatted = String.format("Rs. %.2f", lifetimeRevenue);
            transactionNum.setText(formatted);
            
            // Profit
            double lifetimeProfit = getProfit(
                "SELECT SUM((si.unit_price - pb.product_cost) * si.quantity) AS total_profit " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "JOIN product_batches pb ON si.stock_id = pb.batch_id "
            );
            profitNum.setText(String.format("Rs. %.2f", lifetimeProfit));
            
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatDarkLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JComboBox<String> durationCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel profitNum;
    private javax.swing.JLabel salesNum;
    private javax.swing.JPanel salesPanel;
    private javax.swing.JPanel salesPanel1;
    private javax.swing.JPanel salesPanel2;
    private javax.swing.JLabel transactionNum;
    // End of variables declaration//GEN-END:variables
}
