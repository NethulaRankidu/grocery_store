/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import backend.ConnectionManager;
import backend.LogProcess;
import backend.Session;
import com.formdev.flatlaf.themes.FlatMacLightLaf;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;

/**
 *
 * @author Nethula
 */
public class DashBoard extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public DashBoard() {
        initComponents();
        showSoldItemsCount("Today");
        LogProcess.logger.info("Showing Sold Items count for Today \n");
        durationCombo.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            String selected = (String) durationCombo.getSelectedItem();
            if (selected != null) {
                System.out.println("You selected: " + selected);
                LogProcess.logger.log(Level.INFO, "You selected: {0}\n", selected);
                showSoldItemsCount(selected);
            }
        }
    });
        Title1.setText("Welcome, " + Session.fullName);
        LogProcess.logger.log(Level.INFO, "Loaded dashboard for: {0}\n", Session.fullName);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        salesPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        salesNum = new javax.swing.JLabel();
        salesPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        transactionNum = new javax.swing.JLabel();
        salesPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        profitNum = new javax.swing.JLabel();
        durationCombo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        billing = new javax.swing.JButton();
        addProducts = new javax.swing.JButton();
        addCategory = new javax.swing.JButton();
        addCustomer = new javax.swing.JButton();
        addStock = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        updateProducts = new javax.swing.JButton();
        updateCategory = new javax.swing.JButton();
        updateCustomer = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        billsReport = new javax.swing.JButton();
        boughtByCustomerReport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        Title1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Title1.setText("Welcome");

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        salesPanel.setToolTipText("Shows the number of items sold");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Items Sold");

        salesNum.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        salesNum.setText("Rs. -.--");

        javax.swing.GroupLayout salesPanelLayout = new javax.swing.GroupLayout(salesPanel);
        salesPanel.setLayout(salesPanelLayout);
        salesPanelLayout.setHorizontalGroup(
            salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(salesNum))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        salesPanelLayout.setVerticalGroup(
            salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salesNum)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.add(salesPanel);

        salesPanel1.setToolTipText("Shows the revenue of the selected timeframe");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setText("Revenue (Rs.)");

        transactionNum.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        transactionNum.setText("Rs. -.--");

        javax.swing.GroupLayout salesPanel1Layout = new javax.swing.GroupLayout(salesPanel1);
        salesPanel1.setLayout(salesPanel1Layout);
        salesPanel1Layout.setHorizontalGroup(
            salesPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salesPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(transactionNum))
                .addContainerGap(147, Short.MAX_VALUE))
        );
        salesPanel1Layout.setVerticalGroup(
            salesPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transactionNum)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.add(salesPanel1);

        salesPanel2.setToolTipText("Shows the profit of the selected timeframe");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setText("Profit (Rs.)");

        profitNum.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        profitNum.setText("Rs. -.--");

        javax.swing.GroupLayout salesPanel2Layout = new javax.swing.GroupLayout(salesPanel2);
        salesPanel2.setLayout(salesPanel2Layout);
        salesPanel2Layout.setHorizontalGroup(
            salesPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salesPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(profitNum))
                .addContainerGap(183, Short.MAX_VALUE))
        );
        salesPanel2Layout.setVerticalGroup(
            salesPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profitNum)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.add(salesPanel2);

        durationCombo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        durationCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Today", "This Week", "This Month", "This Year", "Lifetime" }));
        durationCombo.setToolTipText("Select the needed timeframe using this");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("Adding");

        jPanel2.setLayout(new java.awt.GridLayout(1, 0, 5, 5));

        billing.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        billing.setText("Billing");
        billing.setToolTipText("Go to the billing system section");
        billing.setPreferredSize(new java.awt.Dimension(75, 30));
        billing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billingActionPerformed(evt);
            }
        });
        jPanel2.add(billing);

        addProducts.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        addProducts.setText("Add Products");
        addProducts.setToolTipText("Go to the add products section");
        addProducts.setActionCommand("");
        addProducts.setPreferredSize(new java.awt.Dimension(75, 30));
        addProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductsActionPerformed(evt);
            }
        });
        jPanel2.add(addProducts);

        addCategory.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        addCategory.setText("Add Category");
        addCategory.setToolTipText("Go to the add category section");
        addCategory.setPreferredSize(new java.awt.Dimension(75, 30));
        addCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCategoryActionPerformed(evt);
            }
        });
        jPanel2.add(addCategory);

        addCustomer.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        addCustomer.setText("Add Customer");
        addCustomer.setToolTipText("Go to the add customer section");
        addCustomer.setPreferredSize(new java.awt.Dimension(75, 30));
        addCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerActionPerformed(evt);
            }
        });
        jPanel2.add(addCustomer);

        addStock.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        addStock.setText("Add Stock");
        addStock.setToolTipText("Go to the add stock section");
        addStock.setActionCommand("");
        addStock.setPreferredSize(new java.awt.Dimension(75, 30));
        addStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStockActionPerformed(evt);
            }
        });
        jPanel2.add(addStock);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setText("Updating");

        jPanel3.setLayout(new java.awt.GridLayout(1, 0, 5, 5));

        updateProducts.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        updateProducts.setText("Update Products");
        updateProducts.setToolTipText("Go to the update products section");
        updateProducts.setActionCommand("");
        updateProducts.setPreferredSize(new java.awt.Dimension(75, 30));
        updateProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProductsActionPerformed(evt);
            }
        });
        jPanel3.add(updateProducts);

        updateCategory.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        updateCategory.setText("Update Category");
        updateCategory.setToolTipText("Go to the update category section");
        updateCategory.setPreferredSize(new java.awt.Dimension(75, 30));
        updateCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCategoryActionPerformed(evt);
            }
        });
        jPanel3.add(updateCategory);

        updateCustomer.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        updateCustomer.setText("Update Customer");
        updateCustomer.setToolTipText("Go to the update customer section");
        updateCustomer.setPreferredSize(new java.awt.Dimension(75, 30));
        updateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCustomerActionPerformed(evt);
            }
        });
        jPanel3.add(updateCustomer);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setText("Reports");

        jPanel4.setLayout(new java.awt.GridLayout(1, 0, 5, 5));

        billsReport.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        billsReport.setText("Bills");
        billsReport.setToolTipText("Go to the bill reports section");
        billsReport.setActionCommand("");
        billsReport.setPreferredSize(new java.awt.Dimension(75, 30));
        billsReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billsReportActionPerformed(evt);
            }
        });
        jPanel4.add(billsReport);

        boughtByCustomerReport.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        boughtByCustomerReport.setText("All Bought by a customer");
        boughtByCustomerReport.setToolTipText("Go to the all items that is bought by a customer section");
        boughtByCustomerReport.setPreferredSize(new java.awt.Dimension(75, 30));
        boughtByCustomerReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boughtByCustomerReportActionPerformed(evt);
            }
        });
        jPanel4.add(boughtByCustomerReport);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 889, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(durationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Title1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(durationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductsActionPerformed
        // TODO add your handling code here:
        LogProcess.logger.log(Level.INFO, "Clicked Add Product Button\n");
        AddProduct product = new AddProduct();
        LogProcess.logger.log(Level.INFO, "Loaded Add Product Screen\n");
        product.setVisible(true);
        LogProcess.logger.log(Level.INFO, "Made Add Product screen visible \n");

        // Close the current frame
        LogProcess.logger.log(Level.INFO, "Closing Dashboard... \n");
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_addProductsActionPerformed

    private void billingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billingActionPerformed
        // TODO add your handling code here:
        LogProcess.logger.log(Level.INFO, "Clicked Billing Button\n");
        BillingSystem billing = new BillingSystem();
        LogProcess.logger.log(Level.INFO, "Loaded Billing System Screen\n");
        billing.setVisible(true);
        LogProcess.logger.log(Level.INFO, "Made Billing System screen visible \n");

        // Close the current frame
        LogProcess.logger.log(Level.INFO, "Closing Dashboard... \n");
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_billingActionPerformed

    private void addCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCategoryActionPerformed
        // TODO add your handling code here:
        LogProcess.logger.log(Level.INFO, "Clicked Add Category Button\n");
        AddCategory category = new AddCategory();  // or any other JFrame
        LogProcess.logger.log(Level.INFO, "Loaded Add Category Screen\n");
        category.setVisible(true);
        LogProcess.logger.log(Level.INFO, "Made Category screen visible \n");

        // Close the current frame
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_addCategoryActionPerformed

    private void addCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerActionPerformed
        // TODO add your handling code here:
        LogProcess.logger.log(Level.INFO, "Clicked Add Customer Button\n");
        AddCustomer category = new AddCustomer();  // or any other JFrame
        LogProcess.logger.log(Level.INFO, "Loaded Add Category Screen\n");
        category.setVisible(true);
        LogProcess.logger.log(Level.INFO, "Made Category screen visible \n");
        
        // Close the current frame
        LogProcess.logger.log(Level.INFO, "Closing Dashboard... \n");
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_addCustomerActionPerformed

    private void addStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStockActionPerformed
        // TODO add your handling code here:
        LogProcess.logger.log(Level.INFO, "Clicked Add Stock Button\n");
        AddStock stock = new AddStock();  // or any other JFrame
        LogProcess.logger.log(Level.INFO, "Loaded Add Stock Screen\n");
        stock.setVisible(true);
        LogProcess.logger.log(Level.INFO, "Made Stock Screen visible \n");
        
        // Close the current frame
        LogProcess.logger.log(Level.INFO, "Closing Dashboard... \n");
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_addStockActionPerformed

    private void updateProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProductsActionPerformed
        // TODO add your handling code here:
        LogProcess.logger.log(Level.INFO, "Clicked Update Products Button\n");
        UpdateProduct updateProduct = new UpdateProduct();  // or any other JFrame
        LogProcess.logger.log(Level.INFO, "Loaded Update Product Screen\n");
        updateProduct.setVisible(true);
        LogProcess.logger.log(Level.INFO, "Made Update Product Screen visible \n");

        // Close the current frame
        LogProcess.logger.log(Level.INFO, "Closing Dashboard... \n");
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_updateProductsActionPerformed

    private void updateCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCategoryActionPerformed
        // TODO add your handling code here:
        LogProcess.logger.log(Level.INFO, "Clicked Update Category Button\n");
        UpdateCategory updateCategory = new UpdateCategory();  // or any other JFrame
        LogProcess.logger.log(Level.INFO, "Loaded Update Category Screen\n");
        updateCategory.setVisible(true);
        LogProcess.logger.log(Level.INFO, "Made Update Category Screen visible \n");

        // Close the current frame
        LogProcess.logger.log(Level.INFO, "Closing Dashboard... \n");
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_updateCategoryActionPerformed

    private void updateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCustomerActionPerformed
        // TODO add your handling code here:
        LogProcess.logger.log(Level.INFO, "Clicked Update Customer Button\n");
        UpdateCustomer updateCustomer = new UpdateCustomer();  // or any other JFrame
        LogProcess.logger.log(Level.INFO, "Loaded Update Customer Screen\n");
        updateCustomer.setVisible(true);
        LogProcess.logger.log(Level.INFO, "Made Update Customer Screen visible \n");

        // Close the current frame
        LogProcess.logger.log(Level.INFO, "Closing Dashboard... \n");
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_updateCustomerActionPerformed

    private void billsReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billsReportActionPerformed
        // TODO add your handling code here:
        LogProcess.logger.log(Level.INFO, "Clicked Report 1 Button\n");
        BillingReportGUI billingReport = new BillingReportGUI();  // or any other JFrame
        LogProcess.logger.log(Level.INFO, "Loaded Billing Report Screen\n");
        billingReport.setVisible(true);
        LogProcess.logger.log(Level.INFO, "Made Billing Report Screen visible \n");

        // Close the current frame
        LogProcess.logger.log(Level.INFO, "Closing Dashboard... \n");
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_billsReportActionPerformed

    private void boughtByCustomerReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boughtByCustomerReportActionPerformed
        // TODO add your handling code here:
        LogProcess.logger.log(Level.INFO, "Clicked Report 2 Button\n");
        ItemsBoughtReportGUI bought = new ItemsBoughtReportGUI();
        LogProcess.logger.log(Level.INFO, "Loaded Items Bought Report Screen\n");
        bought.setVisible(true);
        LogProcess.logger.log(Level.INFO, "Made Items Bought Report Screen visible \n");
        
        // Close the current frame
        LogProcess.logger.log(Level.INFO, "Closing Dashboard... \n");
        this.dispose(); // closes the frame that this button is part of
    }//GEN-LAST:event_boughtByCustomerReportActionPerformed
    
    public int getCountForPeriod(String sql) {
        try (Connection conn = ConnectionManager.getConnection();
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery()) {
                LogProcess.logger.log(Level.INFO, "Excecuting Query.. \n");
            if (rs.next()) {
                return rs.getInt("total");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            LogProcess.logger.log(Level.SEVERE, "SQL Exception Occured", e);
        }
        return 0;
    }
    
    public double getRevenue(String sql) {
        try (Connection conn = ConnectionManager.getConnection();
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery()) {
                LogProcess.logger.log(Level.INFO, "Excecuting Query.. \n");
            if (rs.next()) {
                return rs.getDouble("total_revenue");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            LogProcess.logger.log(Level.SEVERE, "SQL Exception Occured", e);
        }
        return 0.0;
    }
    
    public double getProfit(String sql) {
        try (Connection conn = ConnectionManager.getConnection();
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery()) {
                LogProcess.logger.log(Level.INFO, "Excecuting Query.. \n");
            if (rs.next()) {
                return rs.getDouble("total_profit");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            LogProcess.logger.log(Level.SEVERE, "SQL Exception Occured", e);
        }
        return 0.0;
    }
    
    public void showSoldItemsCount(String time) {
        if(time.equals("Today")){
            // Clearing items before editing
            salesNum.setText("");
            transactionNum.setText("");
            profitNum.setText("");
            LogProcess.logger.log(Level.INFO, "Emptying the numbers before adding new ones \n");
            
            // Sold Items
            int todaySalesCount = getCountForPeriod("SELECT SUM(quantity) AS total FROM sold_items si JOIN bill b ON si.bill_id = b.bill_id WHERE DATE(b.datetime) = CURDATE()");
            LogProcess.logger.log(Level.INFO, "Getting data to a variable \n");
            salesNum.setText(todaySalesCount + "");
            LogProcess.logger.log(Level.INFO, "Setting the data inside the label \n");
            
            // Revenue
            double todayRevenue = getRevenue(
                "SELECT SUM(si.quantity * si.unit_price) AS total_revenue " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "WHERE DATE(b.datetime) = CURDATE()"
            );
            LogProcess.logger.log(Level.INFO, "Getting data to a variable \n");
            String formatted = String.format("Rs. %.2f", todayRevenue);
            LogProcess.logger.log(Level.INFO, "Formatting it to have two decimals and Rs. \n");
            transactionNum.setText(formatted);
            LogProcess.logger.log(Level.INFO, "Setting number as the text \n");
            
            // Profit
            double todayProfit = getProfit(
                "SELECT SUM((si.unit_price - pb.product_cost) * si.quantity) AS total_profit " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "JOIN product_batches pb ON si.stock_id = pb.batch_id " +
                "WHERE DATE(b.datetime) = CURDATE();"
            );
            LogProcess.logger.log(Level.INFO, "Getting data to a variable \n");
            profitNum.setText(String.format("Rs. %.2f", todayProfit));
            LogProcess.logger.log(Level.INFO, "Formatting it to have two decimals and Rs. then setting it \n");
            
        }else if(time.equals("This Week")){
            // Clearing items before editing
            salesNum.setText("");
            transactionNum.setText("");
            profitNum.setText("");
            LogProcess.logger.log(Level.INFO, "Emptying the numbers before adding new ones \n");
            
            // Sold Items
            int weekSalesCount = getCountForPeriod("SELECT SUM(quantity) AS total FROM sold_items si JOIN bill b ON si.bill_id = b.bill_id WHERE YEARWEEK(datetime, 1) = YEARWEEK(CURDATE(), 1)");
            LogProcess.logger.log(Level.INFO, "Getting data to a variable \n");
            salesNum.setText(weekSalesCount + "");
            LogProcess.logger.log(Level.INFO, "Setting the data inside the label \n");
            
            
            // Revenue
            double weekRevenue = getRevenue(
                "SELECT SUM(si.quantity * si.unit_price) AS total_revenue " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "WHERE YEARWEEK(b.datetime, 1) = YEARWEEK(CURDATE(), 1);"
            );
            LogProcess.logger.log(Level.INFO, "Getting data to a variable \n");
            String formatted = String.format("Rs. %.2f", weekRevenue);
            LogProcess.logger.log(Level.INFO, "Formatting it to have two decimals and Rs. \n");
            transactionNum.setText(formatted);
            LogProcess.logger.log(Level.INFO, "Setting number as the text \n");
            
            // Profit
            double weekProfit = getProfit(
                "SELECT SUM((si.unit_price - pb.product_cost) * si.quantity) AS total_profit " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "JOIN product_batches pb ON si.stock_id = pb.batch_id " +
                "WHERE YEARWEEK(b.datetime, 1) = YEARWEEK(CURDATE(), 1);"
            );
            LogProcess.logger.log(Level.INFO, "Getting data to a variable \n");
            profitNum.setText(String.format("Rs. %.2f", weekProfit));
            LogProcess.logger.log(Level.INFO, "Formatting it to have two decimals and Rs. then setting it \n");
            
        }else if(time.equals("This Month")){
            // Clearing items before editing
            salesNum.setText("");
            transactionNum.setText("");
            profitNum.setText("");
            LogProcess.logger.log(Level.INFO, "Emptying the numbers before adding new ones \n");
            
            // Sold Items
            int monthSalesCount = getCountForPeriod("SELECT SUM(quantity) AS total FROM sold_items si JOIN bill b ON si.bill_id = b.bill_id WHERE YEAR(b.datetime) = YEAR(CURDATE()) AND MONTH(b.datetime) = MONTH(CURDATE());");
            salesNum.setText(monthSalesCount + "");
            System.out.println("Sales this month: " + monthSalesCount);
            
            // Revenue
            double monthRevenue = getRevenue(
                "SELECT SUM(si.quantity * si.unit_price) AS total_revenue " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "WHERE YEAR(b.datetime) = YEAR(CURDATE()) " +
                "AND MONTH(b.datetime) = MONTH(CURDATE());"
            );
            String formatted = String.format("Rs. %.2f", monthRevenue);
            transactionNum.setText(formatted);
            
            // Profit
            double monthProfit = getProfit(
                "SELECT SUM((si.unit_price - pb.product_cost) * si.quantity) AS total_profit " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "JOIN product_batches pb ON si.stock_id = pb.batch_id " +
                "WHERE YEAR(b.datetime) = YEAR(CURDATE()) " +
                "AND MONTH(b.datetime) = MONTH(CURDATE());"
            );
            profitNum.setText(String.format("Rs. %.2f", monthProfit));
            
        }else if(time.equals("This Year")){
            // Clearing items before editing
            salesNum.setText("");
            transactionNum.setText("");
            profitNum.setText("");
            
            // Sold Items
            int yearSalesCount = getCountForPeriod("SELECT SUM(quantity) AS total FROM sold_items si JOIN bill b ON si.bill_id = b.bill_id WHERE YEAR(b.datetime) = YEAR(CURDATE())");
            salesNum.setText(yearSalesCount + "");
            System.out.println("Sales this year: " + yearSalesCount);
            
            // Revenue
            double yearRevenue = getRevenue(
                "SELECT SUM(si.quantity * si.unit_price) AS total_revenue " +
                "FROM sold_items " +
                "si JOIN bill b ON si.bill_id = b.bill_id " +
                "WHERE YEAR(b.datetime) = YEAR(CURDATE());"
            );
            String formatted = String.format("Rs. %.2f", yearRevenue);
            transactionNum.setText(formatted);
            
            // Profit
            double yearProfit = getProfit(
                "SELECT SUM((si.unit_price - pb.product_cost) * si.quantity) AS total_profit " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "JOIN product_batches pb ON si.stock_id = pb.batch_id " +
                "WHERE YEAR(b.datetime) = YEAR(CURDATE());"
            );

            profitNum.setText(String.format("Rs. %.2f", yearProfit));
            
        }else if(time.equals("Lifetime")){
            // Clearing items before editing
            salesNum.setText("");
            transactionNum.setText("");
            profitNum.setText("");
            
            // Sold Items
            int lifetimeSalesCount = getCountForPeriod("SELECT SUM(quantity) AS total FROM sold_items si JOIN bill b ON si.bill_id = b.bill_id");
            salesNum.setText(lifetimeSalesCount + "");
            System.out.println("Sales lifetime: " + lifetimeSalesCount);
            
            // Revenue
            double lifetimeRevenue = getRevenue(
                "SELECT SUM(si.quantity * si.unit_price) AS total_revenue " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id "
            );
            String formatted = String.format("Rs. %.2f", lifetimeRevenue);
            transactionNum.setText(formatted);
            
            // Profit
            double lifetimeProfit = getProfit(
                "SELECT SUM((si.unit_price - pb.product_cost) * si.quantity) AS total_profit " +
                "FROM sold_items si " +
                "JOIN bill b ON si.bill_id = b.bill_id " +
                "JOIN product_batches pb ON si.stock_id = pb.batch_id "
            );
            profitNum.setText(String.format("Rs. %.2f", lifetimeProfit));
            
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatMacLightLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title1;
    private javax.swing.JButton addCategory;
    private javax.swing.JButton addCustomer;
    private javax.swing.JButton addProducts;
    private javax.swing.JButton addStock;
    private javax.swing.JButton billing;
    private javax.swing.JButton billsReport;
    private javax.swing.JButton boughtByCustomerReport;
    private javax.swing.JComboBox<String> durationCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel profitNum;
    private javax.swing.JLabel salesNum;
    private javax.swing.JPanel salesPanel;
    private javax.swing.JPanel salesPanel1;
    private javax.swing.JPanel salesPanel2;
    private javax.swing.JLabel transactionNum;
    private javax.swing.JButton updateCategory;
    private javax.swing.JButton updateCustomer;
    private javax.swing.JButton updateProducts;
    // End of variables declaration//GEN-END:variables
}
